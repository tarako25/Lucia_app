// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @unique
  username String
  production String?
  avatar_img String?
  delete_flg Int @default(0)
  auth_session Session[]
  key          Key[]
  messages Message[]
  comment Comment[]
  follow Follow[]
  follower Follower[]
  good Good[]
  direct_message DirectMessage[]
}

model Session {
  id             String @id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  user           User   @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

model Key {
  id              String  @id @unique
  hashed_password String?
  user_id         String
  user            User    @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

model Message {
  id      Int     @id @default(autoincrement())
  userId  String
  username String
  content String
  comment_count Int @default(0)
  good_count Int @default(0)
  createdAt DateTime
  user    User    @relation(fields: [userId], references: [id])
  comment Comment[]
  good Good[]

  @@index([userId])
}

model Comment {
  comment_id      Int     @id @default(autoincrement())
  id      Int
  userId  String
  username String
  content String
  createdAt DateTime
  user    User    @relation(fields: [userId], references: [id])
  message      Message    @relation(fields: [id], references: [id])
}

model Follow {
  no          Int     @id @default(autoincrement())
  userId  String 
  followId  String
  followname String
  createdAt DateTime
  user    User    @relation(fields: [userId], references: [id])
  follower Follower[]
}

model Follower {
  follow_no   Int @id
  userId  String
  followerId  String
  followername String
  createdAt DateTime
  follow    Follow    @relation(fields: [follow_no], references: [no])
  user    User    @relation(fields: [userId], references: [id])
}

model Good {
  no       Int @id @default(autoincrement())
  post_no Int
  userId  String
  createdAt DateTime
  message      Message    @relation(fields: [post_no], references: [id])
  user    User    @relation(fields: [userId], references: [id])
}

model DirectMessage {
  id      Int     @id @default(autoincrement())
  userId  String
  targetId String
  username String
  targetname String
  content String
  createdAt DateTime
  user    User    @relation(fields: [userId], references: [id])

  @@index([userId])
}